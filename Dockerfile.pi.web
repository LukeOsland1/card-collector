# Raspberry Pi optimized Dockerfile for web server
FROM python:3.11-slim-bullseye

# Set working directory
WORKDIR /app

# Install system dependencies optimized for ARM
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user first
RUN useradd --create-home --shell /bin/bash app

# Copy requirements and install Python packages
COPY pyproject.toml ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -e . \
    && pip cache purge

# Copy application code
COPY . .

# Set proper ownership
RUN chown -R app:app /app

# Switch to non-root user
USER app

# Pi-specific environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app

# Expose port
EXPOSE 8080

# Health check optimized for Pi
HEALTHCHECK --interval=60s --timeout=30s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/api/health || exit 1

# Run the web server
CMD ["python", "-m", "web.app"]