# Raspberry Pi optimized environment configuration
# Copy this to .env and configure with your values

# Discord Bot Configuration
DISCORD_BOT_TOKEN=your_bot_token_here
DISCORD_CLIENT_ID=your_client_id_here
DISCORD_CLIENT_SECRET=your_client_secret_here

# OAuth Configuration (use your Pi's IP address)
OAUTH_REDIRECT_URI=http://192.168.1.100:8080/oauth/callback

# Security
JWT_SECRET=change-me-to-a-secure-random-string-for-pi

# Database Configuration
# For Pi with Docker (PostgreSQL)
DATABASE_URL=postgresql+psycopg://cards_user:cards_password@db:5432/cards

# For Pi native installation (SQLite - lighter weight)
# DATABASE_URL=sqlite:///cards.db

# CDN Configuration (optional)
CDN_BASE_URL=

# Logging Configuration
LOG_LEVEL=INFO

# Web Server Configuration
WEB_HOST=0.0.0.0
WEB_PORT=8080

# Raspberry Pi Specific Optimizations
# Python optimizations
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# Performance tuning for Pi
# Reduce memory usage
MALLOC_TRIM_THRESHOLD_=65536

# Discord.py optimizations
DISCORD_PY_MAX_MESSAGES=1000
DISCORD_PY_CHUNK_GUILDS_AT_STARTUP=False

# Database connection optimizations for Pi
DB_POOL_SIZE=5
DB_POOL_OVERFLOW=10
DB_POOL_TIMEOUT=30

# Web server optimizations for Pi
UVICORN_WORKERS=1
UVICORN_TIMEOUT_GRACEFUL_SHUTDOWN=30

# Resource monitoring
ENABLE_MONITORING=true
MONITORING_INTERVAL=60

# Pi Hardware specific
# Enable if you have a fan connected to GPIO
ENABLE_FAN_CONTROL=false
FAN_ON_TEMP=65
FAN_OFF_TEMP=55

# Network optimizations for Pi
TCP_KEEPALIVE_TIME=600
TCP_KEEPALIVE_INTVL=60
TCP_KEEPALIVE_PROBES=3